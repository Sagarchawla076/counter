{"version":3,"sources":["components/Context.js","components/ComponentA.js","components/ComponentB.js","components/ComponentF.js","components/DataFetching.js","components/App.js","index.js"],"names":["AppContext","React","createContext","reducer","state","action","useGlobalContext","useContext","AppProvider","children","useReducer","count","dispatch","Provider","value","ComponentA","className","onClick","ComponentB","ComponentF","initialState","loading","err","post","type","payload","DataFetching","useEffect","fetch","a","axios","get","response","data","console","log","title","App","ReactDOM","render","document","querySelector"],"mappings":"kLAEMA,EAAaC,IAAMC,gBAGnBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,GACN,IAAK,YACH,OAAOD,EAAQ,EACjB,IAAK,YACH,OAAOA,EAAQ,EACjB,IAAK,QACH,OARe,EASjB,QACE,OAAOA,IAYAE,EAAmB,WAC9B,OAAOC,qBAAWP,IAELQ,EAZK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAA0BC,qBAAWP,EAdlB,GAcnB,mBAAOQ,EAAP,KAAcC,EAAd,KACA,OACE,cAACZ,EAAWa,SAAZ,CAAqBC,MAAO,CAAEH,QAAOC,YAArC,SACGH,KCDQM,MAlBf,WACE,MAA4BT,IAApBK,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,sBAAKI,UAAU,YAAf,UACE,kDAAqBL,KACrB,wBAAQK,UAAU,YAAYC,QAAS,kBAAML,EAAS,cAAtD,uBAGA,wBAAQI,UAAU,YAAYC,QAAS,kBAAML,EAAS,cAAtD,uBAGA,wBAAQI,UAAU,QAAQC,QAAS,kBAAML,EAAS,UAAlD,uBCOSM,MAlBf,WACE,MAA4BZ,IAApBK,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,sBAAKI,UAAU,YAAf,UACE,gDAAmBL,KACnB,wBAAQK,UAAU,YAAYC,QAAS,kBAAML,EAAS,cAAtD,uBAGA,wBAAQI,UAAU,YAAYC,QAAS,kBAAML,EAAS,cAAtD,uBAGA,wBAAQI,UAAU,QAAQC,QAAS,kBAAML,EAAS,UAAlD,uBCOSO,MAlBf,WACE,MAA4Bb,IAApBK,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,sBAAKI,UAAU,YAAf,UACE,gDAAmBL,KACnB,wBAAQK,UAAU,YAAYC,QAAS,kBAAML,EAAS,cAAtD,uBAGA,wBAAQI,UAAU,YAAYC,QAAS,kBAAML,EAAS,cAAtD,uBAGA,wBAAQI,UAAU,QAAQC,QAAS,kBAAML,EAAS,UAAlD,uB,iDCVAQ,EAAe,CACnBC,SAAS,EACTC,IAAK,GACLC,KAAM,IAEFpB,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOmB,MACb,IAAK,iBACH,MAAO,CAAEH,SAAS,EAAOC,IAAK,GAAIC,KAAMlB,EAAOoB,SACjD,IAAK,eACH,MAAO,CAAEJ,SAAS,EAAOE,KAAM,GAAID,IAAK,wBAC1C,QACE,OAAOlB,IA6BEsB,MAzBf,WACE,MAA0BhB,qBAAWP,EAASiB,GAA9C,mBAAOhB,EAAP,KAAcQ,EAAd,KAgBA,OAdAe,qBAAU,WACR,IACMC,EAAK,uCAAG,4BAAAC,EAAA,+EAEaC,IAAMC,IAHrB,gDACE,OAEJC,EAFI,OAIVpB,EAAS,CAAEY,KAAM,iBAAkBC,QAASO,EAASC,OAJ3C,gDAMVC,QAAQC,IAAI,YACZvB,EAAS,CAAEY,KAAM,iBAPP,yDAAH,qDAUXI,MACC,IAED,gCACGxB,EAAMiB,QAAU,UAAYjB,EAAMmB,KAAKa,MACvChC,EAAMkB,IAAMlB,EAAMkB,IAAM,SClBhBe,EAZH,WACV,IAAQ1B,EAAUL,IAAVK,MACR,OACE,sBAAKK,UAAU,MAAf,qBACWL,EADX,KAEE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCbN2B,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.c4fab934.chunk.js","sourcesContent":["import React, { useReducer, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst initialState = 0;\r\nconst reducer = (state, action) => {\r\n  switch (action) {\r\n    case \"increment\":\r\n      return state + 1;\r\n    case \"decrement\":\r\n      return state - 1;\r\n    case \"reset\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst AppProvider = ({ children }) => {\r\n  const [count, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <AppContext.Provider value={{ count, dispatch }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\nexport default AppProvider;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./Context\";\r\nfunction ComponentA() {\r\n  const { count, dispatch } = useGlobalContext();\r\n  return (\r\n    <div className=\"component\">\r\n      <span>Component A - {count}</span>\r\n      <button className=\"increment\" onClick={() => dispatch(\"increment\")}>\r\n        Increment\r\n      </button>\r\n      <button className=\"decrement\" onClick={() => dispatch(\"decrement\")}>\r\n        Decrement\r\n      </button>\r\n      <button className=\"reset\" onClick={() => dispatch(\"reset\")}>\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComponentA;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./Context\";\r\nfunction ComponentB() {\r\n  const { count, dispatch } = useGlobalContext();\r\n  return (\r\n    <div className=\"component\">\r\n      <span>Component A {count}</span>\r\n      <button className=\"increment\" onClick={() => dispatch(\"increment\")}>\r\n        Increment\r\n      </button>\r\n      <button className=\"decrement\" onClick={() => dispatch(\"decrement\")}>\r\n        Decrement\r\n      </button>\r\n      <button className=\"reset\" onClick={() => dispatch(\"reset\")}>\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComponentB;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./Context\";\r\nfunction ComponentF() {\r\n  const { count, dispatch } = useGlobalContext();\r\n  return (\r\n    <div className=\"component\">\r\n      <span>Component F {count}</span>\r\n      <button className=\"increment\" onClick={() => dispatch(\"increment\")}>\r\n        Increment\r\n      </button>\r\n      <button className=\"decrement\" onClick={() => dispatch(\"decrement\")}>\r\n        Decrement\r\n      </button>\r\n      <button className=\"reset\" onClick={() => dispatch(\"reset\")}>\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComponentF;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  err: \"\",\r\n  post: {},\r\n};\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH__SUCCESS\":\r\n      return { loading: false, err: \"\", post: action.payload };\r\n    case \"FETCH__ERROR\":\r\n      return { loading: false, post: {}, err: \"Something Went Wrong\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction DataFetching() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const URL = \"https://jsonplaceholder.typicode.com/posts/1\";\r\n    const fetch = async () => {\r\n      try {\r\n        const response = await axios.get(URL);\r\n\r\n        dispatch({ type: \"FETCH__SUCCESS\", payload: response.data });\r\n      } catch (error) {\r\n        console.log(\"fetching\");\r\n        dispatch({ type: \"FETCH__ERROR\" });\r\n      }\r\n    };\r\n    fetch();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {state.loading ? \"Loading\" : state.post.title}\r\n      {state.err ? state.err : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataFetching;\r\n","import React, { useReducer } from \"react\";\r\nimport ComponentA from \"./ComponentA\";\r\nimport ComponentB from \"./ComponentB\";\r\nimport ComponentC from \"./ComponentC\";\r\nimport ComponentF from \"./ComponentF\";\r\nimport \"../styles/main.scss\";\r\nimport DataFetching from \"./DataFetching\";\r\nimport { useGlobalContext } from \"./Context\";\r\n\r\nconst App = () => {\r\n  const { count } = useGlobalContext();\r\n  return (\r\n    <div className=\"app\">\r\n      =*Count {count}*=\r\n      <ComponentA />\r\n      <ComponentB />\r\n      <ComponentF />\r\n      <DataFetching />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport AppProvider from \"./components/Context\";\r\nReactDOM.render(\r\n  <AppProvider>\r\n    <App />\r\n  </AppProvider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}